import { useLanguage } from "@/components/context/LanguageContext"
import { useEffect } from "react"
import Link from "next/link";

export default function CounterSection({ data }) {
    const { translations, language } = useLanguage();

    useEffect(() => {
        if (data?.bookCount >= 0) {
            counter(data)
        }
    }, [])

    const sections = [
        {
            id: 'bookCount',
            icon: <svg width="40" height="37" viewBox="0 0 40 37" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M39.0879 8.7C39.3953 9.13325 39.594 9.63399 39.6674 10.1601C39.7409 10.6861 39.6869 11.2222 39.5099 11.723L33.0649 32.957C32.7589 33.9705 32.1291 34.8557 31.2719 35.477C30.4571 36.1282 29.448 36.4883 28.4049 36.5H6.77193C5.50531 36.4776 4.2817 36.0367 3.29193 35.246C2.22379 34.4751 1.41145 33.4015 0.959934 32.164C0.585905 31.2098 0.569213 30.1526 0.912933 29.187C0.912933 29.1243 0.936266 28.9133 0.982933 28.554C1.0296 28.1947 1.06093 27.9057 1.07693 27.687C1.0865 27.5174 1.06272 27.3475 1.00693 27.187C0.9532 27.0409 0.929395 26.8855 0.936935 26.73C0.968905 26.556 1.03227 26.3893 1.12394 26.238C1.24202 26.0469 1.37124 25.8629 1.51093 25.687C1.65061 25.5111 1.77983 25.3271 1.89793 25.136C2.3036 24.4489 2.65629 23.7318 2.95293 22.991C3.24934 22.2981 3.48359 21.5803 3.65293 20.846C3.70197 20.6156 3.70604 20.3779 3.66493 20.146C3.62589 19.9294 3.62184 19.7079 3.65293 19.49C3.74177 19.2471 3.87771 19.0242 4.05293 18.834C4.20165 18.6663 4.33549 18.4859 4.45293 18.295C4.83986 17.6047 5.16899 16.8836 5.43694 16.139C5.7121 15.4607 5.90871 14.7531 6.02293 14.03C6.03116 13.7786 6.01138 13.527 5.96394 13.28C5.90927 12.9207 5.91327 12.702 5.97594 12.624C6.08882 12.3481 6.26569 12.1031 6.49194 11.909C6.77327 11.6357 6.94527 11.46 7.00793 11.382C7.41609 10.7625 7.75163 10.0982 8.00793 9.40199C8.32226 8.67992 8.53916 7.91926 8.65293 7.14C8.66107 6.93757 8.63745 6.73511 8.58293 6.54C8.52463 6.33845 8.50863 6.12704 8.53593 5.91901C8.58046 5.76685 8.65192 5.62391 8.74693 5.497C8.85627 5.341 8.99694 5.16133 9.16894 4.95799C9.34094 4.75466 9.47426 4.59067 9.56893 4.46601C9.7161 4.23796 9.84549 3.99893 9.95593 3.75101C10.0893 3.46168 10.2066 3.18834 10.3079 2.931C10.4093 2.67367 10.5343 2.39234 10.6829 2.08701C10.8075 1.82112 10.9608 1.56963 11.1399 1.33701C11.3175 1.12258 11.5269 0.936729 11.7609 0.785997C12.0104 0.616565 12.3035 0.522817 12.6049 0.516008C12.9797 0.515955 13.3531 0.559241 13.7179 0.645006L13.6949 0.714998C14.0875 0.607403 14.4892 0.536763 14.8949 0.504H32.7169C33.2369 0.479836 33.7545 0.58755 34.2217 0.81711C34.6888 1.04667 35.0904 1.39063 35.3889 1.817C35.6981 2.254 35.8978 2.75885 35.9712 3.28908C36.0447 3.81931 35.9897 4.35943 35.8109 4.864L29.3879 26.094C29.0991 27.4021 28.527 28.6309 27.7119 29.694C26.8437 30.3294 25.7697 30.6179 24.6999 30.503H4.33494C4.16904 30.4854 4.00133 30.5082 3.84616 30.5695C3.69099 30.6308 3.55298 30.7287 3.44393 30.855C3.35747 31.0082 3.31014 31.1803 3.30613 31.3561C3.30212 31.532 3.34155 31.7061 3.42094 31.863C3.79894 32.9543 4.92394 33.5 6.79594 33.5H28.4279C28.8897 33.4977 29.3426 33.3724 29.7399 33.137C30.1301 32.9326 30.4246 32.5832 30.5599 32.164L37.5909 9.03101C37.7091 8.59619 37.7488 8.14376 37.7079 7.69501C38.2529 7.89425 38.7311 8.24244 39.0879 8.7ZM14.1509 8.747C14.1188 8.83274 14.1063 8.92464 14.1144 9.01586C14.1226 9.10708 14.1511 9.1953 14.1979 9.274C14.249 9.3497 14.3195 9.41031 14.402 9.44953C14.4845 9.48874 14.576 9.50513 14.6669 9.497H28.9169C29.1363 9.49192 29.3475 9.4134 29.5169 9.274C29.6989 9.14415 29.8345 8.95947 29.9039 8.747L30.3959 7.247C30.4282 7.16126 30.4407 7.06937 30.4325 6.97814C30.4244 6.8869 30.3958 6.79868 30.3489 6.72C30.2978 6.64431 30.2274 6.5837 30.1449 6.54448C30.0624 6.50526 29.9709 6.48886 29.8799 6.497H15.6319C15.4126 6.50208 15.2013 6.58061 15.0319 6.72C14.85 6.84985 14.7144 7.03452 14.6449 7.247L14.1509 8.747ZM12.2059 14.747C12.1738 14.8327 12.1613 14.9246 12.1694 15.0159C12.1776 15.1071 12.2061 15.1953 12.2529 15.274C12.304 15.3497 12.3745 15.4103 12.457 15.4495C12.5395 15.4887 12.631 15.5051 12.7219 15.497H26.9719C27.1913 15.4919 27.4025 15.4134 27.5719 15.274C27.7539 15.1442 27.8895 14.9595 27.9589 14.747L28.4509 13.247C28.4831 13.1612 28.4956 13.0694 28.4874 12.9782C28.4793 12.8869 28.4508 12.7987 28.4039 12.72C28.3528 12.6443 28.2824 12.5837 28.1999 12.5445C28.1174 12.5053 28.0259 12.4889 27.9349 12.497H13.6879C13.4686 12.5021 13.2573 12.5806 13.0879 12.72C12.906 12.8499 12.7704 13.0345 12.7009 13.247L12.2059 14.747Z" fill="white"></path>
            </svg>,
            title: translations.book_list,
            // title: 'کــــــتاب ها',
            link: `/${language}/books`
        },
        {
            id: 'authorCount',
            icon: <svg width="42" height="34" viewBox="0 0 42 34" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M18.323 26.657L24.128 15.037L25.433 16.337L31.108 12.264L30.491 11.405L25.546 14.956L17.202 6.61301L20.718 1.70401L19.8569 1.08801L15.8189 6.72601L17.127 8.03401L5.50395 13.834L5.48395 14.148C5.21795 19.34 4.70195 25.121 1.91195 28.001L1.54895 28.374L2.33295 29.158L3.08095 29.906L3.78895 30.613L4.16295 30.238C6.92995 27.461 12.5199 26.954 18.0079 26.672L18.323 26.657ZM4.08395 28.905L11.353 21.636C11.6975 21.7871 12.0845 21.8113 12.4452 21.7046C12.806 21.5978 13.1174 21.3668 13.3243 21.0526C13.5311 20.7383 13.6202 20.361 13.5757 19.9874C13.5311 19.6138 13.3559 19.268 13.0809 19.0112C12.8059 18.7544 12.449 18.6031 12.0732 18.5841C11.6975 18.5652 11.3271 18.6797 11.0277 18.9075C10.7283 19.1353 10.5191 19.4617 10.4371 19.8289C10.3552 20.1962 10.4058 20.5805 10.58 20.914L3.07995 28.414L3.01895 28.354C5.70195 25.187 6.25195 19.604 6.51895 14.515L17.906 8.83001L23.329 14.252L17.652 25.632C12.447 25.907 7.19295 26.43 4.08395 28.905Z" fill="white" stroke="white" strokeWidth="1.5"></path>
                <path d="M40.6269 31.851H6.7699V32.909H40.6269V31.851Z" fill="white" stroke="white" strokeWidth="1.5"></path>
            </svg>,
            title: translations.authors,
            // title: 'نویسندگـــــان',
            link: `/${language}/authors`
        },
        {
            id: 'subjectCount',
            icon: <svg width="38" height="30" viewBox="0 0 38 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M37.253 15.913L31.126 28.166C30.9509 28.513 30.6812 28.8033 30.3479 29.0033C30.0147 29.2033 29.6316 29.3048 29.243 29.296H4.795C4.2586 29.296 3.72745 29.1903 3.23189 28.985C2.73633 28.7797 2.28607 28.4788 1.90682 28.0995C1.52757 27.7201 1.22677 27.2698 1.02159 26.7742C0.816406 26.2786 0.710867 25.7474 0.710999 25.211V4.78902C0.710999 3.70587 1.14128 2.66709 1.90717 1.90119C2.67307 1.13529 3.71185 0.705017 4.795 0.705017H12.295C12.8316 0.70555 13.3628 0.8118 13.8584 1.0177C14.3539 1.2236 14.804 1.52512 15.183 1.90502L18.319 4.79302H27.26C28.3431 4.79302 29.3819 5.22329 30.1478 5.98919C30.9137 6.75509 31.344 7.79387 31.344 8.87702V10.919H28.28V8.87402C28.2797 8.60331 28.1721 8.34377 27.9807 8.15236C27.7892 7.96094 27.5297 7.85328 27.259 7.85302H17.048L13.011 4.06802C12.9171 3.9722 12.8049 3.89627 12.681 3.84473C12.5571 3.79319 12.4242 3.7671 12.29 3.76802H4.79C4.51929 3.76828 4.25975 3.87594 4.06834 4.06735C3.87692 4.25877 3.76926 4.51831 3.769 4.78902V23.169L8.311 14.088C8.48045 13.7483 8.7413 13.4626 9.06423 13.2629C9.38715 13.0633 9.75936 12.9577 10.139 12.958H35.428C35.7757 12.9588 36.1175 13.0483 36.421 13.2181C36.7244 13.3878 36.9796 13.6321 37.1623 13.928C37.345 14.2238 37.4492 14.5614 37.4651 14.9087C37.481 15.2561 37.408 15.6017 37.253 15.913Z" fill="white"></path>
            </svg>,
            title: translations.topics,
            // title: 'موضوعــــات',
            link: `${language}/authorities`
        }
    ]

    const devider = (
        <div className="absolute top-[63px] md:top-0 left-0 flex justify-center md:justify-end items-center w-full h-full">
            <span className="w-[70%] md:w-0 md:h-[70%] border-y md:border-y-0 md:border-x border-teal-700"></span>
        </div>
    )

    return <>
        <section className="w-full px-4 relative -top-22" style={{top: '-5.5rem'}}>
            <div className="relative max-w-screen-xl mx-auto">
                <div className="max-w-4xl mx-auto">
                    <div style={{ backdropFilter: "blur(7px)", background: "rgba(255,255,255,0.8)" }} className="rounded-md shadow-lg md:grid md:grid-cols-3">

                        {
                            sections.map((item, index) => {
                                return <Link href={item.link} key={item.id} className="relative block">
                                    
                                    {/* { index == 1 && devider } */}
                                    
                                    <div className="flex justify-around  p-5 items-center hover:scale-90 transition relative z-30">
                                        <div className="flex w-[74px] h-[74px] bg-[#276867]  rounded-full justify-center items-center">
                                            {item.icon}
                                        </div>
                                        <dl className="text-center leading-[1.5]">
                                            <dt className="fs-28 font-bold text-teal-800">
                                                {item.title}
                                            </dt>
                                            <dd id={item.id} className={`${language == 'en' ? '' : 'fu-num'} fs-26 font-bold text-gray-700`}>
                                                0+
                                            </dd>
                                        </dl>
                                    </div>

                                    { index != sections.length - 1 && devider }
                                </Link>
                            })
                        }

                    </div>
                </div>
            </div>
        </section>
    </>
}


const counter = (data) => {
    const targets = [
        { element: document.getElementById('bookCount'), count: data?.bookCount, suffix: '+' },
        { element: document.getElementById('authorCount'), count: data?.authorCount, suffix: '+' },
        { element: document.getElementById('subjectCount'), count: data?.subjectCount, suffix: '+' }
    ];

    function animateCountUp(target, duration) {
        let currentCount = 0;
        const increment = Math.ceil(target.count / (duration / 10));

        const interval = setInterval(() => {
            currentCount += increment;
            if (currentCount >= target.count) {
                clearInterval(interval);
                currentCount = target.count;
                target.element.textContent = currentCount.toLocaleString('ar') + target.suffix;
            } else {
                target.element.textContent = currentCount.toLocaleString('fa');
            }
        }, 10);
    }

    targets.forEach(target => {
        animateCountUp(target, 500);
    });
}
